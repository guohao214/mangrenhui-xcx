'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = App({
  globalData: {
    baseUrl: 'https://www.mlxiaowu.com/'
    //baseUrl : 'http://localhost/',
  },
  onLaunch: function onLaunch() {
    return;
    var self = this;
    wx.login({
      success: function success(data) {
        self.get('xcxLogin/authorize', { code: data.code }).then(function (data) {
          wx.setStorageSync('session_id', data.data);
        });
      }
    });
  },
  onShow: function onShow() {},
  onHide: function onHide() {},

  request: function request(method, url, data) {
    var _this = this;

    return new Promise(function (res, rej) {
      wx.showLoading({
        title: '加载中...'
      });
      wx.request({
        method: method,
        header: {
          'x-requested-with': 'xmlhttprequest',
          "Content-Type": "application/x-www-form-urlencoded",
          'x-xcx': 'xcx',
          'token': wx.getStorageSync('session_id')
        },
        url: _this.globalData.baseUrl + url,
        data: data,
        success: function success(result) {
          var data = result.data;
          if (data.status == 1) res(result.data);else if (data.status == -999) {
            // 跳转到绑定页
            wx.navigateTo({
              url: '/pages/bind/index'
            });
          } else {
            rej(data);
          }
        },
        fail: function fail(error) {
          return rej(error);
        },
        complete: function complete() {
          setTimeout(function () {
            return wx.hideLoading();
          }, 500);
        }
      });
    });
  },
  get: function get(url) {
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return this.request('GET', url, data);
  },
  post: function post(url, data) {
    return this.request('POST', url, data);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC53eGEiXSwibmFtZXMiOlsiZ2xvYmFsRGF0YSIsImJhc2VVcmwiLCJvbkxhdW5jaCIsInNlbGYiLCJ3eCIsImxvZ2luIiwic3VjY2VzcyIsImRhdGEiLCJnZXQiLCJjb2RlIiwidGhlbiIsInNldFN0b3JhZ2VTeW5jIiwib25TaG93Iiwib25IaWRlIiwicmVxdWVzdCIsIm1ldGhvZCIsInVybCIsIlByb21pc2UiLCJyZXMiLCJyZWoiLCJzaG93TG9hZGluZyIsInRpdGxlIiwiaGVhZGVyIiwiZ2V0U3RvcmFnZVN5bmMiLCJyZXN1bHQiLCJzdGF0dXMiLCJuYXZpZ2F0ZVRvIiwiZmFpbCIsImVycm9yIiwiY29tcGxldGUiLCJzZXRUaW1lb3V0IiwiaGlkZUxvYWRpbmciLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFrRElBLGNBQVk7QUFDVkMsYUFBUztBQUNUO0FBRlUsRztBQUlaQyxVLHNCQUFXO0FBQ1Q7QUFDQSxRQUFJQyxPQUFPLElBQVg7QUFDQUMsT0FBR0MsS0FBSCxDQUFTO0FBQ1BDLGVBQVMsaUJBQVVDLElBQVYsRUFBZ0I7QUFDdkJKLGFBQUtLLEdBQUwsQ0FBUyxvQkFBVCxFQUErQixFQUFDQyxNQUFNRixLQUFLRSxJQUFaLEVBQS9CLEVBQWtEQyxJQUFsRCxDQUF1RCxnQkFBUTtBQUM3RE4sYUFBR08sY0FBSCxDQUFrQixZQUFsQixFQUFnQ0osS0FBS0EsSUFBckM7QUFDRCxTQUZEO0FBR0Q7QUFMTSxLQUFUO0FBUUQsRztBQUNESyxRLG9CQUFTLENBQ1IsQztBQUNEQyxRLG9CQUFTLENBQ1IsQzs7QUFDREMsV0FBUyxpQkFBVUMsTUFBVixFQUFrQkMsR0FBbEIsRUFBdUJULElBQXZCLEVBQTZCO0FBQUE7O0FBQ3BDLFdBQU8sSUFBSVUsT0FBSixDQUFZLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CZixTQUFHZ0IsV0FBSCxDQUFlO0FBQ2JDLGVBQU87QUFETSxPQUFmO0FBR0FqQixTQUFHVSxPQUFILENBQVc7QUFDVEMsZ0JBQVFBLE1BREM7QUFFVE8sZ0JBQVE7QUFDTiw4QkFBb0IsZ0JBRGQ7QUFFTiwwQkFBZ0IsbUNBRlY7QUFHTixtQkFBUyxLQUhIO0FBSU4sbUJBQVNsQixHQUFHbUIsY0FBSCxDQUFrQixZQUFsQjtBQUpILFNBRkM7QUFRVFAsYUFBSyxNQUFLaEIsVUFBTCxDQUFnQkMsT0FBaEIsR0FBMEJlLEdBUnRCO0FBU1RULGtCQVRTO0FBVVRELGlCQUFTLGlCQUFDa0IsTUFBRCxFQUFZO0FBQ25CLGNBQUlqQixPQUFPaUIsT0FBT2pCLElBQWxCO0FBQ0EsY0FBSUEsS0FBS2tCLE1BQUwsSUFBZSxDQUFuQixFQUNFUCxJQUFJTSxPQUFPakIsSUFBWCxFQURGLEtBRUssSUFBSUEsS0FBS2tCLE1BQUwsSUFBZSxDQUFDLEdBQXBCLEVBQXlCO0FBQzVCO0FBQ0FyQixlQUFHc0IsVUFBSCxDQUFjO0FBQ1pWLG1CQUFLO0FBRE8sYUFBZDtBQUdELFdBTEksTUFLRTtBQUNMRyxnQkFBSVosSUFBSjtBQUNEO0FBQ0YsU0F0QlE7QUF1QlRvQixjQUFNLGNBQUNDLEtBQUQ7QUFBQSxpQkFBV1QsSUFBSVMsS0FBSixDQUFYO0FBQUEsU0F2Qkc7QUF3QlRDLGtCQUFVLG9CQUFNO0FBQ2RDLHFCQUFXO0FBQUEsbUJBQU0xQixHQUFHMkIsV0FBSCxFQUFOO0FBQUEsV0FBWCxFQUFtQyxHQUFuQztBQUNEO0FBMUJRLE9BQVg7QUE0QkQsS0FoQ00sQ0FBUDtBQWlDRCxHO0FBQ0R2QixPQUFLLGFBQVVRLEdBQVYsRUFBMEI7QUFBQSxRQUFYVCxJQUFXLHVFQUFKLEVBQUk7O0FBQzdCLFdBQU8sS0FBS08sT0FBTCxDQUFhLEtBQWIsRUFBb0JFLEdBQXBCLEVBQXlCVCxJQUF6QixDQUFQO0FBQ0QsRztBQUNEeUIsUUFBTSxjQUFVaEIsR0FBVixFQUFlVCxJQUFmLEVBQXFCO0FBQ3pCLFdBQU8sS0FBS08sT0FBTCxDQUFhLE1BQWIsRUFBcUJFLEdBQXJCLEVBQTBCVCxJQUExQixDQUFQO0FBQ0QiLCJmaWxlIjoiYXBwLnd4YSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb25maWc6IHtcbiAgICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICAnbGF5b3V0LWhlYWQnOiAnbGF5b3V0L2hlYWQnLFxuICAgICAgICAvLyAnbGF5b3V0LWZvb3QnOiAnbGF5b3V0L2Zvb3QnXG4gICAgICB9LFxuICAgICAgcGFnZXM6IFtdLFxuICAgICAgd2luZG93OiB7XG4gICAgICAgIGJhY2tncm91bmRUZXh0U3R5bGU6ICdkYXJrJyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2VmZWZlZicsXG4gICAgICAgIG5hdmlnYXRpb25CYXJCYWNrZ3JvdW5kQ29sb3I6ICcjZmZmZmZmJyxcbiAgICAgICAgbmF2aWdhdGlvbkJhclRpdGxlVGV4dDogJ+ebsuS6uuiNnycsXG4gICAgICAgIG5hdmlnYXRpb25CYXJUZXh0U3R5bGU6ICdibGFjaydcbiAgICAgIH0sXG4gICAgICB0YWJCYXI6IHtcbiAgICAgICAgY29sb3I6ICcjOGE4YThhJyxcbiAgICAgICAgc2VsZWN0ZWRDb2xvcjogJyNmZmI0MDAnLFxuICAgICAgICBib3JkZXJTdHlsZTogJ2JsYWNrJyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgIGxpc3Q6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYWdlUGF0aDogJ3BhZ2VzL2FwcG9pbnRtZW50L2luZGV4JyxcbiAgICAgICAgICAgIGljb25QYXRoOiAnY29tbW9uL2Fzc2V0cy90YWIvMDMucG5nJyxcbiAgICAgICAgICAgIHNlbGVjdGVkSWNvblBhdGg6ICdjb21tb24vYXNzZXRzL3RhYi8wMzEucG5nJyxcbiAgICAgICAgICAgIHRleHQ6ICfpooTnuqYnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYWdlUGF0aDogJ3BhZ2VzL29yZGVyL2luZGV4JyxcbiAgICAgICAgICAgIGljb25QYXRoOiAnY29tbW9uL2Fzc2V0cy90YWIvMDEucG5nJyxcbiAgICAgICAgICAgIHNlbGVjdGVkSWNvblBhdGg6ICdjb21tb24vYXNzZXRzL3RhYi8wMTEucG5nJyxcbiAgICAgICAgICAgIHRleHQ6ICfkubDljZUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYWdlUGF0aDogJ3BhZ2VzL2NlbnRlci9pbmRleCcsXG4gICAgICAgICAgICBpY29uUGF0aDogJ2NvbW1vbi9hc3NldHMvdGFiLzA0LnBuZycsXG4gICAgICAgICAgICBzZWxlY3RlZEljb25QYXRoOiAnY29tbW9uL2Fzc2V0cy90YWIvMDQxLnBuZycsXG4gICAgICAgICAgICB0ZXh0OiAn5oiR55qEJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgcGFnZVBhdGg6ICdwYWdlcy9hcnRpY2xlL2luZGV4JyxcbiAgICAgICAgICAgIGljb25QYXRoOiAnY29tbW9uL2Fzc2V0cy90YWIvMDIucG5nJyxcbiAgICAgICAgICAgIHNlbGVjdGVkSWNvblBhdGg6ICdjb21tb24vYXNzZXRzL3RhYi8wMjEucG5nJyxcbiAgICAgICAgICAgIHRleHQ6ICflk4HniYwnXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgbmV0d29ya1RpbWVvdXQ6IHtcbiAgICAgICAgcmVxdWVzdDogMTAwMDBcbiAgICAgIH1cbiAgICB9LFxuICAgIGdsb2JhbERhdGE6IHtcbiAgICAgIGJhc2VVcmw6ICdodHRwczovL3d3dy5tbHhpYW93dS5jb20vJyxcbiAgICAgIC8vYmFzZVVybCA6ICdodHRwOi8vbG9jYWxob3N0LycsXG4gICAgfSxcbiAgICBvbkxhdW5jaCgpIHtcbiAgICAgIHJldHVyblxuICAgICAgbGV0IHNlbGYgPSB0aGlzXG4gICAgICB3eC5sb2dpbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgc2VsZi5nZXQoJ3hjeExvZ2luL2F1dGhvcml6ZScsIHtjb2RlOiBkYXRhLmNvZGV9KS50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgd3guc2V0U3RvcmFnZVN5bmMoJ3Nlc3Npb25faWQnLCBkYXRhLmRhdGEpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgIH0sXG4gICAgb25TaG93KCkge1xuICAgIH0sXG4gICAgb25IaWRlKCkge1xuICAgIH0sXG4gICAgcmVxdWVzdDogZnVuY3Rpb24gKG1ldGhvZCwgdXJsLCBkYXRhKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgIHd4LnNob3dMb2FkaW5nKHtcbiAgICAgICAgICB0aXRsZTogJ+WKoOi9veS4rS4uLidcbiAgICAgICAgfSlcbiAgICAgICAgd3gucmVxdWVzdCh7XG4gICAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgICAneC1yZXF1ZXN0ZWQtd2l0aCc6ICd4bWxodHRwcmVxdWVzdCcsXG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxuICAgICAgICAgICAgJ3gteGN4JzogJ3hjeCcsXG4gICAgICAgICAgICAndG9rZW4nOiB3eC5nZXRTdG9yYWdlU3luYygnc2Vzc2lvbl9pZCcpXG4gICAgICAgICAgfSxcbiAgICAgICAgICB1cmw6IHRoaXMuZ2xvYmFsRGF0YS5iYXNlVXJsICsgdXJsLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgc3VjY2VzczogKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSByZXN1bHQuZGF0YVxuICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09IDEpXG4gICAgICAgICAgICAgIHJlcyhyZXN1bHQuZGF0YSlcbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEuc3RhdHVzID09IC05OTkpIHtcbiAgICAgICAgICAgICAgLy8g6Lez6L2s5Yiw57uR5a6a6aG1XG4gICAgICAgICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICAgIHVybDogJy9wYWdlcy9iaW5kL2luZGV4J1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVqKGRhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBmYWlsOiAoZXJyb3IpID0+IHJlaihlcnJvciksXG4gICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gd3guaGlkZUxvYWRpbmcoKSwgNTAwKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uICh1cmwsIGRhdGEgPSB7fSkge1xuICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdCgnR0VUJywgdXJsLCBkYXRhKVxuICAgIH0sXG4gICAgcG9zdDogZnVuY3Rpb24gKHVybCwgZGF0YSkge1xuICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdCgnUE9TVCcsIHVybCwgZGF0YSlcbiAgICB9XG4gIH0iXX0=