'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page({
  data: {
    '__code__': {
      readme: ''
    },

    phone: '',
    smsCode: '',
    start: false,
    startText: '获取验证码',
    userInfo: '',
    authed: false
  },
  onShow: function onShow() {},

  getUserInfo: function getUserInfo(res) {
    if (!res.detail.userInfo) {
      return wx.showToast({
        title: '请您先授权',
        icon: 'none'
      });
    }
    this.setData({
      authed: true,
      userInfo: res.detail.userInfo
    });
  },

  handlerPhone: function handlerPhone(event) {
    var value = event.detail.value;
    this.setData({
      phone: value
    });
  },
  handlerSmsCode: function handlerSmsCode(event) {
    var value = event.detail.value;
    this.setData({
      smsCode: value
    });
  },
  login: function login() {
    var app = getApp();
    if (!this.data.smsCode || !/^\d{6}$/.test(this.data.smsCode)) {
      wx.showToast({
        title: '验证码错误',
        icon: 'none'
      });
      return;
    }

    app.get('bind/bindMe', { code: this.data.smsCode, phone: this.data.phone, user_info: this.data.userInfo }).then(function (data) {
      return setTimeout(function () {
        return wx.switchTab({
          url: '/pages/appointment/index'
        });
      }, 500);
    }).catch(function (error) {
      return wx.showToast({
        title: error.detail || '登录失败，请重试',
        icon: 'none'
      });
    });
  },
  sendCode: function sendCode() {
    var _this = this;

    var app = getApp();

    if (!this.data.phone || !/^1\d{10}$/.test(this.data.phone)) {
      wx.showToast({
        title: '手机号格式错误',
        icon: 'none'
      });
      return;
    }

    this.setData({
      start: true
    });

    var intervalCounts = 60;

    this.setData({
      startText: intervalCounts-- + 's'
    });

    var interval = setInterval(function (x) {
      _this.setData({
        startText: intervalCounts-- + 's'
      });

      if (intervalCounts == -1) {
        clearInterval(interval);
        _this.setData({
          start: false,
          startText: '发送验证码'
        });
      }
    }, 1000);

    app.get('sms/send/' + this.data.phone).then(function (data) {
      wx.showToast({ title: '验证码已发送，请注意查收', icon: 'none' });
    }).catch(function (error) {
      return wx.showToast({ title: error.detail || '登录失败，请重试', icon: 'none' });
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Lnd4cCJdLCJuYW1lcyI6WyJkYXRhIiwicGhvbmUiLCJzbXNDb2RlIiwic3RhcnQiLCJzdGFydFRleHQiLCJ1c2VySW5mbyIsImF1dGhlZCIsIm9uU2hvdyIsImdldFVzZXJJbmZvIiwicmVzIiwiZGV0YWlsIiwid3giLCJzaG93VG9hc3QiLCJ0aXRsZSIsImljb24iLCJzZXREYXRhIiwiaGFuZGxlclBob25lIiwiZXZlbnQiLCJ2YWx1ZSIsImhhbmRsZXJTbXNDb2RlIiwibG9naW4iLCJhcHAiLCJnZXRBcHAiLCJ0ZXN0IiwiZ2V0IiwiY29kZSIsInVzZXJfaW5mbyIsInRoZW4iLCJzZXRUaW1lb3V0Iiwic3dpdGNoVGFiIiwidXJsIiwiY2F0Y2giLCJlcnJvciIsInNlbmRDb2RlIiwiaW50ZXJ2YWxDb3VudHMiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBT0lBLFFBQU07QUFBQTtBQUFBO0FBQUE7O0FBQ0pDLFdBQU8sRUFESDtBQUVKQyxhQUFTLEVBRkw7QUFHSkMsV0FBTyxLQUhIO0FBSUpDLGVBQVcsT0FKUDtBQUtKQyxjQUFVLEVBTE47QUFNSkMsWUFBUTtBQU5KLEc7QUFRTkMsVUFBUSxrQkFBWSxDQUNuQixDOztBQUVEQyxhLHVCQUFZQyxHLEVBQUs7QUFDZixRQUFJLENBQUNBLElBQUlDLE1BQUosQ0FBV0wsUUFBaEIsRUFBMEI7QUFDeEIsYUFBT00sR0FBR0MsU0FBSCxDQUFhO0FBQ2xCQyxlQUFPLE9BRFc7QUFFbEJDLGNBQU07QUFGWSxPQUFiLENBQVA7QUFJRDtBQUNHLFNBQUtDLE9BQUwsQ0FBYTtBQUNYVCxjQUFRLElBREc7QUFFWEQsZ0JBQVVJLElBQUlDLE1BQUosQ0FBV0w7QUFGVixLQUFiO0FBSUQsRzs7QUFDTFcsZ0JBQWMsc0JBQVVDLEtBQVYsRUFBaUI7QUFDN0IsUUFBSUMsUUFBUUQsTUFBTVAsTUFBTixDQUFhUSxLQUF6QjtBQUNBLFNBQUtILE9BQUwsQ0FBYTtBQUNYZCxhQUFPaUI7QUFESSxLQUFiO0FBR0QsRztBQUNEQyxrQkFBZ0Isd0JBQVVGLEtBQVYsRUFBaUI7QUFDL0IsUUFBSUMsUUFBUUQsTUFBTVAsTUFBTixDQUFhUSxLQUF6QjtBQUNBLFNBQUtILE9BQUwsQ0FBYTtBQUNYYixlQUFTZ0I7QUFERSxLQUFiO0FBR0QsRztBQUNERSxTQUFPLGlCQUFZO0FBQ2pCLFFBQUlDLE1BQU1DLFFBQVY7QUFDQSxRQUFJLENBQUMsS0FBS3RCLElBQUwsQ0FBVUUsT0FBWCxJQUFzQixDQUFDLFVBQVVxQixJQUFWLENBQWUsS0FBS3ZCLElBQUwsQ0FBVUUsT0FBekIsQ0FBM0IsRUFBOEQ7QUFDNURTLFNBQUdDLFNBQUgsQ0FBYTtBQUNYQyxlQUFPLE9BREk7QUFFWEMsY0FBTTtBQUZLLE9BQWI7QUFJQTtBQUNEOztBQUVETyxRQUFJRyxHQUFKLENBQVEsYUFBUixFQUF1QixFQUFDQyxNQUFNLEtBQUt6QixJQUFMLENBQVVFLE9BQWpCLEVBQTBCRCxPQUFPLEtBQUtELElBQUwsQ0FBVUMsS0FBM0MsRUFBa0R5QixXQUFXLEtBQUsxQixJQUFMLENBQVVLLFFBQXZFLEVBQXZCLEVBQ0dzQixJQURILENBQ1E7QUFBQSxhQUFRQyxXQUFXO0FBQUEsZUFDckJqQixHQUFHa0IsU0FBSCxDQUFhO0FBQ1hDLGVBQUs7QUFETSxTQUFiLENBRHFCO0FBQUEsT0FBWCxFQUlWLEdBSlUsQ0FBUjtBQUFBLEtBRFIsRUFNR0MsS0FOSCxDQU1TO0FBQUEsYUFDTHBCLEdBQUdDLFNBQUgsQ0FBYTtBQUNYQyxlQUFPbUIsTUFBTXRCLE1BQU4sSUFBZ0IsVUFEWjtBQUVYSSxjQUFNO0FBRkssT0FBYixDQURLO0FBQUEsS0FOVDtBQVdELEc7QUFDRG1CLFlBQVUsb0JBQVk7QUFBQTs7QUFDcEIsUUFBSVosTUFBTUMsUUFBVjs7QUFFQSxRQUFJLENBQUMsS0FBS3RCLElBQUwsQ0FBVUMsS0FBWCxJQUFvQixDQUFDLFlBQVlzQixJQUFaLENBQWlCLEtBQUt2QixJQUFMLENBQVVDLEtBQTNCLENBQXpCLEVBQTREO0FBQzFEVSxTQUFHQyxTQUFILENBQWE7QUFDWEMsZUFBTyxTQURJO0FBRVhDLGNBQU07QUFGSyxPQUFiO0FBSUE7QUFDRDs7QUFFRCxTQUFLQyxPQUFMLENBQWE7QUFDWFosYUFBTztBQURJLEtBQWI7O0FBSUEsUUFBSStCLGlCQUFpQixFQUFyQjs7QUFFQSxTQUFLbkIsT0FBTCxDQUFhO0FBQ1hYLGlCQUFjOEIsZ0JBQWQ7QUFEVyxLQUFiOztBQUlBLFFBQUlDLFdBQVdDLFlBQVksYUFBSztBQUM5QixZQUFLckIsT0FBTCxDQUFhO0FBQ1hYLG1CQUFjOEIsZ0JBQWQ7QUFEVyxPQUFiOztBQUlBLFVBQUlBLGtCQUFrQixDQUFDLENBQXZCLEVBQTBCO0FBQ3hCRyxzQkFBY0YsUUFBZDtBQUNBLGNBQUtwQixPQUFMLENBQWE7QUFDWFosaUJBQU8sS0FESTtBQUVYQyxxQkFBVztBQUZBLFNBQWI7QUFJRDtBQUNGLEtBWmMsRUFZWixJQVpZLENBQWY7O0FBY0FpQixRQUFJRyxHQUFKLGVBQW9CLEtBQUt4QixJQUFMLENBQVVDLEtBQTlCLEVBQ0cwQixJQURILENBQ1EsZ0JBQVE7QUFDWmhCLFNBQUdDLFNBQUgsQ0FBYSxFQUFDQyxPQUFPLGNBQVIsRUFBd0JDLE1BQU0sTUFBOUIsRUFBYjtBQUNELEtBSEgsRUFJR2lCLEtBSkgsQ0FJUztBQUFBLGFBQVNwQixHQUFHQyxTQUFILENBQWEsRUFBQ0MsT0FBT21CLE1BQU10QixNQUFOLElBQWdCLFVBQXhCLEVBQW9DSSxNQUFNLE1BQTFDLEVBQWIsQ0FBVDtBQUFBLEtBSlQ7QUFLRCIsImZpbGUiOiJpbmRleC53eHAiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgY29uZmlnOiB7XG4gICAgICBuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0OiAn57uR5a6a5omL5py65Y+3JyxcbiAgICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICAnd3hjLWF2YXRhcic6ICdAbWludWkvd3hjLWF2YXRhcicsXG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiB7XG4gICAgICBwaG9uZTogJycsXG4gICAgICBzbXNDb2RlOiAnJyxcbiAgICAgIHN0YXJ0OiBmYWxzZSxcbiAgICAgIHN0YXJ0VGV4dDogJ+iOt+WPlumqjOivgeeggScsXG4gICAgICB1c2VySW5mbzogJycsXG4gICAgICBhdXRoZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG4gICAgfSxcblxuICAgIGdldFVzZXJJbmZvKHJlcykge1xuICAgICAgaWYgKCFyZXMuZGV0YWlsLnVzZXJJbmZvKSB7XG4gICAgICAgIHJldHVybiB3eC5zaG93VG9hc3Qoe1xuICAgICAgICAgIHRpdGxlOiAn6K+35oKo5YWI5o6I5p2DJyxcbiAgICAgICAgICBpY29uOiAnbm9uZSdcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgYXV0aGVkOiB0cnVlLFxuICAgICAgICAgICAgdXNlckluZm86IHJlcy5kZXRhaWwudXNlckluZm9cbiAgICAgICAgICB9KVxuICAgICAgICB9LCAgXG4gICAgaGFuZGxlclBob25lOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGxldCB2YWx1ZSA9IGV2ZW50LmRldGFpbC52YWx1ZVxuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgcGhvbmU6IHZhbHVlXG4gICAgICB9KVxuICAgIH0sXG4gICAgaGFuZGxlclNtc0NvZGU6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgbGV0IHZhbHVlID0gZXZlbnQuZGV0YWlsLnZhbHVlXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBzbXNDb2RlOiB2YWx1ZVxuICAgICAgfSlcbiAgICB9LFxuICAgIGxvZ2luOiBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgYXBwID0gZ2V0QXBwKClcbiAgICAgIGlmICghdGhpcy5kYXRhLnNtc0NvZGUgfHwgIS9eXFxkezZ9JC8udGVzdCh0aGlzLmRhdGEuc21zQ29kZSkpIHtcbiAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICB0aXRsZTogJ+mqjOivgeeggemUmeivrycsXG4gICAgICAgICAgaWNvbjogJ25vbmUnXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgYXBwLmdldCgnYmluZC9iaW5kTWUnLCB7Y29kZTogdGhpcy5kYXRhLnNtc0NvZGUsIHBob25lOiB0aGlzLmRhdGEucGhvbmUsIHVzZXJfaW5mbzogdGhpcy5kYXRhLnVzZXJJbmZvfSlcbiAgICAgICAgLnRoZW4oZGF0YSA9PiBzZXRUaW1lb3V0KCgpID0+XG4gICAgICAgICAgICB3eC5zd2l0Y2hUYWIoe1xuICAgICAgICAgICAgICB1cmw6ICcvcGFnZXMvYXBwb2ludG1lbnQvaW5kZXgnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICwgNTAwKSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+XG4gICAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICAgIHRpdGxlOiBlcnJvci5kZXRhaWwgfHwgJ+eZu+W9leWksei0pe+8jOivt+mHjeivlScsXG4gICAgICAgICAgICBpY29uOiAnbm9uZSdcbiAgICAgICAgICB9KSlcbiAgICB9LFxuICAgIHNlbmRDb2RlOiBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgYXBwID0gZ2V0QXBwKClcblxuICAgICAgaWYgKCF0aGlzLmRhdGEucGhvbmUgfHwgIS9eMVxcZHsxMH0kLy50ZXN0KHRoaXMuZGF0YS5waG9uZSkpIHtcbiAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICB0aXRsZTogJ+aJi+acuuWPt+agvOW8j+mUmeivrycsXG4gICAgICAgICAgaWNvbjogJ25vbmUnXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgc3RhcnQ6IHRydWVcbiAgICAgIH0pXG5cbiAgICAgIGxldCBpbnRlcnZhbENvdW50cyA9IDYwXG5cbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIHN0YXJ0VGV4dDogYCR7aW50ZXJ2YWxDb3VudHMtLX1zYFxuICAgICAgfSlcblxuICAgICAgbGV0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoeCA9PiB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgc3RhcnRUZXh0OiBgJHtpbnRlcnZhbENvdW50cy0tfXNgXG4gICAgICAgIH0pXG5cbiAgICAgICAgaWYgKGludGVydmFsQ291bnRzID09IC0xKSB7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgc3RhcnQ6IGZhbHNlLFxuICAgICAgICAgICAgc3RhcnRUZXh0OiAn5Y+R6YCB6aqM6K+B56CBJ1xuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0sIDEwMDApXG5cbiAgICAgIGFwcC5nZXQoYHNtcy9zZW5kLyR7dGhpcy5kYXRhLnBob25lfWApXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgIHd4LnNob3dUb2FzdCh7dGl0bGU6ICfpqozor4HnoIHlt7Llj5HpgIHvvIzor7fms6jmhI/mn6XmlLYnLCBpY29uOiAnbm9uZSd9KVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4gd3guc2hvd1RvYXN0KHt0aXRsZTogZXJyb3IuZGV0YWlsIHx8ICfnmbvlvZXlpLHotKXvvIzor7fph43or5UnLCBpY29uOiAnbm9uZSd9KSlcbiAgICB9LFxuICB9Il19