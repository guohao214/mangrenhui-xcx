'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page({
  data: {
    '__code__': {
      readme: ''
    },

    userInfo: {},
    authed: false,
    loading: false,
    noPhone: false
  },

  onShow: function onShow() {
    var _this2 = this;

    this.setData({
      userInfo: {},
      authed: false,
      loading: false,
      noPhone: false
    }, function () {
      var noPhone = !!getApp().globalData.userInfo.noPhone;
      _this2.setData({
        authed: !!getApp().getSessionId(),
        noPhone: noPhone
      });
    });
  },

  getPhoneNumber: function getPhoneNumber(res) {
    var _this3 = this;

    var _this = this;
    if (!res.detail.iv) {
      wx.showToast({
        title: '获取手机号失败，请重试',
        icon: 'none'
      });
      return;
    }

    var app = getApp();

    // res.detail
    // encryptedData: "3aKTLbNlVjSNSQiMO7pKpmB6OkRD5u8h8jL+y2Ap2vBymLUsNV6qzKpOG+t0TeasWEKqki2U9+g477mFicGq0PIZ0DE8tBpSK7Bft+vgG2ZUwBE2F/Xz28baZcFVShIgxo1HbUDVBCI25M3LTXeMqnnFuA2EoGbMtvu4tTzD6cbqPZpESuLlQM6o1QkwYu73fzumV6Vna6iUlt5psUuioA=="
    // errMsg: "getPhoneNumber:ok"
    // iv: "mYO48TOme5wPMw1e7RS4Sg=="

    var userInfo = this.data.userInfo;
    if (Object.keys(this.data.userInfo).length <= 1) {
      this.setData({
        userInfo: getApp().getUserInfo()
      });

      userInfo = getApp().getUserInfo();
    }

    app.post('bind/bindMe', {
      enc_detail: JSON.stringify(res.detail),
      user_info: JSON.stringify(userInfo)
    }).then(function (data) {
      app.globalData.noPhone = false;
      var userInfo = _this3.data.userInfo;
      userInfo.noPhone = false;

      // 隐藏
      _this3.setData({
        noPhone: false
      });

      app.setUserInfo(userInfo);

      wx.navigateBack();
    });
  },
  getUserInfo: function getUserInfo(res) {
    var _this4 = this;

    if (!res.detail.iv) {
      wx.showToast({
        title: '用户授权失败，请重试',
        icon: 'none'
      });
      return;
    }

    var app = getApp();

    app.login(JSON.stringify(res.detail)).then(function (data) {
      // data 为session_id
      if (!res.detail.userInfo) {
        return wx.showToast({
          title: '用户授权失败，请重试',
          icon: 'none'
        });
      }

      // 获取了用户信息
      var userInfo = res.detail.userInfo;
      userInfo.noPhone = data.noPhone;

      _this4.setData({
        authed: true,
        noPhone: data.noPhone,
        userInfo: userInfo
      });

      app.setUserInfo(userInfo);

      // 有手机号，直接返回
      if (!data.noPhone) {
        app.globalData.noPhone = false;
        wx.navigateBack();
      }
    }).catch(function (e) {
      wx.showToast({
        title: '登录失败，请重试',
        icon: 'none'
      });
    });
  },

  handlerPhone: function handlerPhone(event) {
    var value = event.detail.value;
    this.setData({
      phone: value
    });
  },
  handlerSmsCode: function handlerSmsCode(event) {
    var value = event.detail.value;
    this.setData({
      smsCode: value
    });
  },
  login: function login() {
    var app = getApp();
    if (!this.data.smsCode || !/^\d{6}$/.test(this.data.smsCode)) {
      wx.showToast({
        title: '验证码错误',
        icon: 'none'
      });
      return;
    }

    app.get('bind/bindMe', { code: this.data.smsCode, phone: this.data.phone, user_info: this.data.userInfo }).then(function (data) {
      return setTimeout(function () {
        return wx.switchTab({
          url: '/pages/appointment/index'
        });
      }, 500);
    }).catch(function (error) {
      return wx.showToast({
        title: error.detail || '登录失败，请重试',
        icon: 'none'
      });
    });
  },
  sendCode: function sendCode() {
    var _this5 = this;

    var app = getApp();

    if (!this.data.phone || !/^1\d{10}$/.test(this.data.phone)) {
      wx.showToast({
        title: '手机号格式错误',
        icon: 'none'
      });
      return;
    }

    this.setData({
      start: true
    });

    var intervalCounts = 60;

    this.setData({
      startText: intervalCounts-- + 's'
    });

    var interval = setInterval(function (x) {
      _this5.setData({
        startText: intervalCounts-- + 's'
      });

      if (intervalCounts == -1) {
        clearInterval(interval);
        _this5.setData({
          start: false,
          startText: '发送验证码'
        });
      }
    }, 1000);

    app.get('sms/send/' + this.data.phone).then(function (data) {
      wx.showToast({ title: '验证码已发送，请注意查收', icon: 'none' });
    }).catch(function (error) {
      return wx.showToast({ title: error.detail || '登录失败，请重试', icon: 'none' });
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,