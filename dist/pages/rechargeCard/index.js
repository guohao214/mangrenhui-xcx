'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page({
  data: {
    cards: [],
    totalAmount: 0,
    currentCard: {
      recharge_card_id: ''
    }
  },
  onLoad: function onLoad(options) {
    // console.log(options)
  },

  recharge: function recharge() {
    var app = getApp();
    var id = this.data.currentCard.recharge_card_id;
    if (!id) return wx.message('请选择充值卡');

    app.get('rechargeCard/buyRechargeCard/' + id).then(function (data) {
      var result = data.data.content;
      wx.requestPayment(Object.assign({}, result, {
        success: function success(res) {
          console.log(res);
        },
        fail: function fail(res) {
          console.log(res);
        }
      }));
    });
  },


  onShow: function onShow() {
    this.getCards();
    this.getTotalAmount();
  },

  //  查看充值协议
  goAgreement: function goAgreement() {
    wx.navigateTo({
      url: '/pages/h5/index?url=https%3A%2F%2Fapi.mdshijie.com%2Fagreement.html'
    });
  },
  chooseCard: function chooseCard(e) {
    var card = this.data.cards[e.currentTarget.dataset.index];
    this.setData({
      currentCard: card
    });
  },
  goForm: function goForm(e) {
    var id = e.currentTarget.dataset.id;
    wx.navigateTo({
      url: '/pages/pet/form?id=' + id
    });
  },
  addPet: function addPet() {
    wx.navigateTo({
      url: '/pages/pet/form'
    });
  },
  getTotalAmount: function getTotalAmount() {
    var _this = this;

    var app = getApp();
    app.get('rechargeCard/getMyRechargeCardTotalAmountSummery').then(function (data) {
      _this.setData({
        totalAmount: data.data.content
      });
    });
  },


  getCards: function getCards() {
    var _this2 = this;

    var app = getApp();
    app.get('rechargeCard/list').then(function (data) {
      var result = data.data;
      _this2.setData({
        currentCard: result.content[0],
        cards: result.content
      });
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Lnd4cCJdLCJuYW1lcyI6WyJkYXRhIiwiY2FyZHMiLCJ0b3RhbEFtb3VudCIsImN1cnJlbnRDYXJkIiwicmVjaGFyZ2VfY2FyZF9pZCIsIm9uTG9hZCIsIm9wdGlvbnMiLCJyZWNoYXJnZSIsImFwcCIsImdldEFwcCIsImlkIiwid3giLCJtZXNzYWdlIiwiZ2V0IiwidGhlbiIsInJlc3VsdCIsImNvbnRlbnQiLCJyZXF1ZXN0UGF5bWVudCIsIk9iamVjdCIsImFzc2lnbiIsInN1Y2Nlc3MiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiZmFpbCIsIm9uU2hvdyIsImdldENhcmRzIiwiZ2V0VG90YWxBbW91bnQiLCJnb0FncmVlbWVudCIsIm5hdmlnYXRlVG8iLCJ1cmwiLCJjaG9vc2VDYXJkIiwiZSIsImNhcmQiLCJjdXJyZW50VGFyZ2V0IiwiZGF0YXNldCIsImluZGV4Iiwic2V0RGF0YSIsImdvRm9ybSIsImFkZFBldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBY0lBLFFBQU07QUFDSkMsV0FBTyxFQURIO0FBRUpDLGlCQUFhLENBRlQ7QUFHSkMsaUJBQWE7QUFDWEMsd0JBQWtCO0FBRFA7QUFIVCxHO0FBT05DLFVBQVEsZ0JBQVVDLE9BQVYsRUFBbUI7QUFDekI7QUFDRCxHOztBQUVEQyxVLHNCQUFXO0FBQ1QsUUFBSUMsTUFBTUMsUUFBVjtBQUNBLFFBQU1DLEtBQUssS0FBS1YsSUFBTCxDQUFVRyxXQUFWLENBQXNCQyxnQkFBakM7QUFDQSxRQUFJLENBQUNNLEVBQUwsRUFDRSxPQUFPQyxHQUFHQyxPQUFILENBQVcsUUFBWCxDQUFQOztBQUVGSixRQUFJSyxHQUFKLG1DQUF3Q0gsRUFBeEMsRUFBOENJLElBQTlDLENBQW1ELGdCQUFRO0FBQ3pELFVBQUlDLFNBQVNmLEtBQUtBLElBQUwsQ0FBVWdCLE9BQXZCO0FBQ0FMLFNBQUdNLGNBQUgsQ0FBa0JDLE9BQU9DLE1BQVAsQ0FBYyxFQUFkLEVBQWtCSixNQUFsQixFQUEwQjtBQUMxQ0ssZUFEMEMsbUJBQ2xDQyxHQURrQyxFQUM3QjtBQUNYQyxrQkFBUUMsR0FBUixDQUFZRixHQUFaO0FBQ0QsU0FIeUM7QUFJMUNHLFlBSjBDLGdCQUlyQ0gsR0FKcUMsRUFJaEM7QUFDUkMsa0JBQVFDLEdBQVIsQ0FBWUYsR0FBWjtBQUNEO0FBTnlDLE9BQTFCLENBQWxCO0FBUUQsS0FWRDtBQVdELEc7OztBQUVESSxVQUFRLGtCQUFZO0FBQ2xCLFNBQUtDLFFBQUw7QUFDQSxTQUFLQyxjQUFMO0FBQ0QsRzs7QUFFRDtBQUNBQyxhLHlCQUFjO0FBQ1pqQixPQUFHa0IsVUFBSCxDQUFjO0FBQ1pDLFdBQUs7QUFETyxLQUFkO0FBR0QsRztBQUVEQyxZLHNCQUFXQyxDLEVBQUc7QUFDWixRQUFNQyxPQUFPLEtBQUtqQyxJQUFMLENBQVVDLEtBQVYsQ0FBZ0IrQixFQUFFRSxhQUFGLENBQWdCQyxPQUFoQixDQUF3QkMsS0FBeEMsQ0FBYjtBQUNBLFNBQUtDLE9BQUwsQ0FBYTtBQUNYbEMsbUJBQWE4QjtBQURGLEtBQWI7QUFHRCxHO0FBRURLLFEsa0JBQU9OLEMsRUFBRztBQUNSLFFBQU10QixLQUFLc0IsRUFBRUUsYUFBRixDQUFnQkMsT0FBaEIsQ0FBd0J6QixFQUFuQztBQUNBQyxPQUFHa0IsVUFBSCxDQUFjO0FBQ1pDLFdBQUssd0JBQXdCcEI7QUFEakIsS0FBZDtBQUdELEc7QUFFRDZCLFEsb0JBQVM7QUFDUDVCLE9BQUdrQixVQUFILENBQWM7QUFDWkMsV0FBSztBQURPLEtBQWQ7QUFHRCxHO0FBRURILGdCLDRCQUFpQjtBQUFBOztBQUNmLFFBQUluQixNQUFNQyxRQUFWO0FBQ0FELFFBQUlLLEdBQUosQ0FBUSxrREFBUixFQUE0REMsSUFBNUQsQ0FBaUUsZ0JBQVE7QUFDdkUsWUFBS3VCLE9BQUwsQ0FBYTtBQUNYbkMscUJBQWFGLEtBQUtBLElBQUwsQ0FBVWdCO0FBRFosT0FBYjtBQUdELEtBSkQ7QUFLRCxHOzs7QUFFRFUsWUFBVSxvQkFBWTtBQUFBOztBQUNwQixRQUFJbEIsTUFBTUMsUUFBVjtBQUNBRCxRQUFJSyxHQUFKLENBQVEsbUJBQVIsRUFBNkJDLElBQTdCLENBQWtDLGdCQUFRO0FBQ3hDLFVBQUlDLFNBQVNmLEtBQUtBLElBQWxCO0FBQ0EsYUFBS3FDLE9BQUwsQ0FBYTtBQUNYbEMscUJBQWFZLE9BQU9DLE9BQVAsQ0FBZSxDQUFmLENBREY7QUFFWGYsZUFBT2MsT0FBT0M7QUFGSCxPQUFiO0FBSUQsS0FORDtBQU9EIiwiZmlsZSI6ImluZGV4Lnd4cCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb25maWc6IHtcbiAgICAgIG5hdmlnYXRpb25CYXJUaXRsZVRleHQ6ICflhYXlgLzljaEnLFxuICAgICAgbmF2aWdhdGlvbkJhckJhY2tncm91bmRDb2xvcjogJyNFOEU4RTgnLFxuICAgICAgbmF2aWdhdGlvbkJhclRleHRTdHlsZTogJ2JsYWNrJyxcbiAgICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICAnd3hjLWRpYWxvZyc6ICdAbWludWkvd3hjLWRpYWxvZycsXG4gICAgICAgICd3eGMtYWJub3InOiAnQG1pbnVpL3d4Yy1hYm5vcicsXG4gICAgICAgICd3eGMtZWxpcCc6ICdAbWludWkvd3hjLWVsaXAnLFxuICAgICAgICAnd3hjLWZsZXgnOiAnQG1pbnVpL3d4Yy1mbGV4JyxcbiAgICAgICAgJ3d4Yy1pY29uJzogJ0BtaW51aS93eGMtaWNvbicsXG4gICAgICAgICd3eGMtYXZhdGFyJzogJ0BtaW51aS93eGMtYXZhdGFyJyxcbiAgICAgIH1cbiAgICB9LFxuICAgIGRhdGE6IHtcbiAgICAgIGNhcmRzOiBbXSxcbiAgICAgIHRvdGFsQW1vdW50OiAwLFxuICAgICAgY3VycmVudENhcmQ6IHtcbiAgICAgICAgcmVjaGFyZ2VfY2FyZF9pZDogJydcbiAgICAgIH0sXG4gICAgfSxcbiAgICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhvcHRpb25zKVxuICAgIH0sXG5cbiAgICByZWNoYXJnZSgpIHtcbiAgICAgIGxldCBhcHAgPSBnZXRBcHAoKVxuICAgICAgY29uc3QgaWQgPSB0aGlzLmRhdGEuY3VycmVudENhcmQucmVjaGFyZ2VfY2FyZF9pZFxuICAgICAgaWYgKCFpZClcbiAgICAgICAgcmV0dXJuIHd4Lm1lc3NhZ2UoJ+ivt+mAieaLqeWFheWAvOWNoScpXG5cbiAgICAgIGFwcC5nZXQoYHJlY2hhcmdlQ2FyZC9idXlSZWNoYXJnZUNhcmQvJHtpZH1gKS50aGVuKGRhdGEgPT4ge1xuICAgICAgICBsZXQgcmVzdWx0ID0gZGF0YS5kYXRhLmNvbnRlbnRcbiAgICAgICAgd3gucmVxdWVzdFBheW1lbnQoT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0LCB7XG4gICAgICAgICAgc3VjY2VzcyhyZXMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcylcbiAgICAgICAgICB9LFxuICAgICAgICAgIGZhaWwocmVzKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpXG4gICAgICAgICAgfVxuICAgICAgICB9KSlcbiAgICAgIH0pXG4gICAgfSxcblxuICAgIG9uU2hvdzogZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5nZXRDYXJkcygpXG4gICAgICB0aGlzLmdldFRvdGFsQW1vdW50KClcbiAgICB9LFxuXG4gICAgLy8gIOafpeeci+WFheWAvOWNj+iurlxuICAgIGdvQWdyZWVtZW50KCkge1xuICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybDogJy9wYWdlcy9oNS9pbmRleD91cmw9aHR0cHMlM0ElMkYlMkZhcGkubWRzaGlqaWUuY29tJTJGYWdyZWVtZW50Lmh0bWwnXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICBjaG9vc2VDYXJkKGUpIHtcbiAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLmRhdGEuY2FyZHNbZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaW5kZXhdXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBjdXJyZW50Q2FyZDogY2FyZFxuICAgICAgfSlcbiAgICB9LFxuXG4gICAgZ29Gb3JtKGUpIHtcbiAgICAgIGNvbnN0IGlkID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaWRcbiAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICB1cmw6ICcvcGFnZXMvcGV0L2Zvcm0/aWQ9JyArIGlkXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICBhZGRQZXQoKSB7XG4gICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgdXJsOiAnL3BhZ2VzL3BldC9mb3JtJ1xuICAgICAgfSlcbiAgICB9LFxuXG4gICAgZ2V0VG90YWxBbW91bnQoKSB7XG4gICAgICBsZXQgYXBwID0gZ2V0QXBwKClcbiAgICAgIGFwcC5nZXQoJ3JlY2hhcmdlQ2FyZC9nZXRNeVJlY2hhcmdlQ2FyZFRvdGFsQW1vdW50U3VtbWVyeScpLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgdG90YWxBbW91bnQ6IGRhdGEuZGF0YS5jb250ZW50XG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICBnZXRDYXJkczogZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IGFwcCA9IGdldEFwcCgpXG4gICAgICBhcHAuZ2V0KCdyZWNoYXJnZUNhcmQvbGlzdCcpLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgIGxldCByZXN1bHQgPSBkYXRhLmRhdGFcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICBjdXJyZW50Q2FyZDogcmVzdWx0LmNvbnRlbnRbMF0sXG4gICAgICAgICAgY2FyZHM6IHJlc3VsdC5jb250ZW50XG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0sXG4gIH0iXX0=