'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page({
  data: {
    '__code__': {
      readme: ''
    },

    toastText: '',
    showToast: false,
    shopList: [],
    cpShopList: [],
    showShopListPop: 'hide',
    currentShop: {},
    beauticianList: [],
    currentBeautician: {}
  },

  handlerSearch: function handlerSearch(event) {
    var value = event.detail.value;
    var shopList = this.data.shopList;
    var cpShopList = shopList.filter(function (item) {
      return item.shop_name.match(new RegExp(value));
    });

    this.setData({
      cpShopList: cpShopList
    });
  },

  showShopList: function showShopList() {
    this.setData({
      showShopListPop: 'show'
    });
  },

  chooseShop: function chooseShop(event) {
    var index = event.currentTarget.dataset.index;
    var currentShop = this.data.shopList[index];
    this.setData({
      currentShop: currentShop,
      showShopListPop: 'hide'
    });

    this.getBeauticianAndProject(currentShop.shop_id);
  },

  chooseBeautician: function chooseBeautician(event) {
    var app = getApp();
    var _currentBeautician = this.data.currentBeautician;

    var index = event.currentTarget.dataset.index;
    var currentBeautician = this.data.beauticianList[index];
    if (currentBeautician.beautician_id === this.data.currentBeautician.beautician_id) return;

    this.setData({
      currentBeautician: currentBeautician
    });
  },

  _toast: function _toast(text) {
    wx.showToast({
      title: text,
      duration: 2000,
      icon: 'none'
    });
  },


  getBeauticianAndProject: function getBeauticianAndProject(shopId) {
    var app = getApp();
    var self = this;
    app.get('appointment/getBeauticianAndProject/' + shopId).then(function (data) {
      var content = data.data && data.data.content || {};
      var currentBeautician = {};

      var defaultBeautician = (content.defaultBeautician || 0) / 1;
      if (defaultBeautician > 0) {
        currentBeautician = content.beauticians.filter(function (item) {
          return item.beautician_id == defaultBeautician;
        }).pop();
      }

      self.setData({
        beauticianList: content.beauticians,
        currentBeautician: currentBeautician
      });
    }).catch(function (e) {
      console.log(e);
    });
  },

  setBeauticion: function setBeauticion() {
    var app = getApp();

    var beauticianId = this.data.currentBeautician.beautician_id;

    // 设置默认管家
    app.post('center/setBeautician/' + beauticianId).then(function (data) {
      console.log(data);
    }).catch(function (e) {
      wx.message('设置默认管家出错，请重试.');
    });
  },


  init: function init() {
    var app = getApp();
    var self = this;

    wx.getLocation({
      complete: function complete(data) {
        if (Object.prototype.toString.call(data) !== '[object Object]') data = {};

        app.get('shop/getList', { latitude: data.latitude || '', longitude: data.longitude || '' }).then(function (data) {
          var result = data.data;
          var currentShop = result.content[0] || {};
          self.setData({
            shopList: result.content,
            cpShopList: result.content
          });

          // 判断shop_id是否存在
          if (self.data.currentShop.shop_id) {
            currentShop = self.data.currentShop;
            self.setData({
              currentShop: currentShop
            });
          } else {
            self.setData({
              currentShop: currentShop
            });
          }

          // self.getPets()

          if (currentShop) self.getBeauticianAndProject(currentShop.shop_id);
        }).catch(function (e) {
          return console.log(e);
        });
      },
      fail: function fail() {
        wx.openSetting({
          success: function success(res) {},
          fail: function fail() {}
        });
      }
    });
  },
  onShow: function onShow() {
    this.init();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Lnd4cCJdLCJuYW1lcyI6WyJkYXRhIiwidG9hc3RUZXh0Iiwic2hvd1RvYXN0Iiwic2hvcExpc3QiLCJjcFNob3BMaXN0Iiwic2hvd1Nob3BMaXN0UG9wIiwiY3VycmVudFNob3AiLCJiZWF1dGljaWFuTGlzdCIsImN1cnJlbnRCZWF1dGljaWFuIiwiaGFuZGxlclNlYXJjaCIsImV2ZW50IiwidmFsdWUiLCJkZXRhaWwiLCJmaWx0ZXIiLCJpdGVtIiwic2hvcF9uYW1lIiwibWF0Y2giLCJSZWdFeHAiLCJzZXREYXRhIiwic2hvd1Nob3BMaXN0IiwiY2hvb3NlU2hvcCIsImluZGV4IiwiY3VycmVudFRhcmdldCIsImRhdGFzZXQiLCJnZXRCZWF1dGljaWFuQW5kUHJvamVjdCIsInNob3BfaWQiLCJjaG9vc2VCZWF1dGljaWFuIiwiYXBwIiwiZ2V0QXBwIiwiX2N1cnJlbnRCZWF1dGljaWFuIiwiYmVhdXRpY2lhbl9pZCIsIl90b2FzdCIsInRleHQiLCJ3eCIsInRpdGxlIiwiZHVyYXRpb24iLCJpY29uIiwic2hvcElkIiwic2VsZiIsImdldCIsInRoZW4iLCJjb250ZW50IiwiZGVmYXVsdEJlYXV0aWNpYW4iLCJiZWF1dGljaWFucyIsInBvcCIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImUiLCJzZXRCZWF1dGljaW9uIiwiYmVhdXRpY2lhbklkIiwicG9zdCIsIm1lc3NhZ2UiLCJpbml0IiwiZ2V0TG9jYXRpb24iLCJjb21wbGV0ZSIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwicmVzdWx0IiwiZmFpbCIsIm9wZW5TZXR0aW5nIiwic3VjY2VzcyIsInJlcyIsIm9uU2hvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBY0lBLFFBQU07QUFBQTtBQUFBO0FBQUE7O0FBQ0pDLGVBQVcsRUFEUDtBQUVKQyxlQUFXLEtBRlA7QUFHSkMsY0FBVSxFQUhOO0FBSUpDLGdCQUFZLEVBSlI7QUFL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QUwsQ0FBYTtBQUNYWjtBQURXLGFBQWI7QUFHRDs7QUFFRDs7QUFFQSxjQUFJQSxXQUFKLEVBQ0VnQyxLQUFLZCx1QkFBTCxDQUE2QmxCLFlBQVltQixPQUF6QztBQUNILFNBeEJELEVBd0JHb0IsS0F4QkgsQ0F3QlM7QUFBQSxpQkFBS0MsUUFBUUMsR0FBUixDQUFZQyxDQUFaLENBQUw7QUFBQSxTQXhCVDtBQXlCRCxPQTlCWTtBQStCYmUsWUFBTSxnQkFBWTtBQUNoQjlCLFdBQUcrQixXQUFILENBQWU7QUFDYkMsbUJBQVMsaUJBQVVDLEdBQVYsRUFBZSxDQUN2QixDQUZZO0FBR2JILGdCQUFNLGdCQUFZLENBQ2pCO0FBSlksU0FBZjtBQU1EO0FBdENZLEtBQWY7QUF3Q0gsRztBQUNESSxRLG9CQUFTO0FBQ1AsU0FBS2QsSUFBTDtBQUNEIiwiZmlsZSI6ImluZGV4Lnd4cCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb25maWc6IHtcbiAgICAgIG5hdmlnYXRpb25CYXJUaXRsZVRleHQ6ICfmiJHnmoTnrqHlrrYnLFxuICAgICAgbmF2aWdhdGlvbkJhckJhY2tncm91bmRDb2xvcjogJyNFOEU4RTgnLFxuICAgICAgbmF2aWdhdGlvbkJhclRleHRTdHlsZTogJ2JsYWNrJyxcbiAgICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICAnd3hjLWZsZXgnOiAnQG1pbnVpL3d4Yy1mbGV4JyxcbiAgICAgICAgJ3d4Yy1pY29uJzogJ0BtaW51aS93eGMtaWNvbicsXG4gICAgICAgICd3eGMtYXZhdGFyJzogJ0BtaW51aS93eGMtYXZhdGFyJyxcbiAgICAgICAgJ3d4Yy1tYXNrJzogJ0BtaW51aS93eGMtbWFzaycsXG4gICAgICAgICd3eGMtcG9wdXAnOiAnQG1pbnVpL3d4Yy1wb3B1cCcsXG4gICAgICAgICd3eGMtZWxpcCc6ICdAbWludWkvd3hjLWVsaXAnLFxuICAgICAgfVxuICAgIH0sXG4gICAgZGF0YToge1xuICAgICAgdG9hc3RUZXh0OiAnJyxcbiAgICAgIHNob3dUb2FzdDogZmFsc2UsXG4gICAgICBzaG9wTGlzdDogW10sXG4gICAgICBjcFNob3BMaXN0OiBbXSxcbiAgICAgIHNob3dTaG9wTGlzdFBvcDogJ2hpZGUnLFxuICAgICAgY3VycmVudFNob3A6IHt9LFxuICAgICAgYmVhdXRpY2lhbkxpc3Q6IFtdLFxuICAgICAgY3VycmVudEJlYXV0aWNpYW46IHt9LFxuICAgIH0sXG5cbiAgICBoYW5kbGVyU2VhcmNoOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGxldCB2YWx1ZSA9IGV2ZW50LmRldGFpbC52YWx1ZVxuICAgICAgbGV0IHNob3BMaXN0ID0gdGhpcy5kYXRhLnNob3BMaXN0XG4gICAgICBsZXQgY3BTaG9wTGlzdCA9IHNob3BMaXN0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbS5zaG9wX25hbWUubWF0Y2gobmV3IFJlZ0V4cCh2YWx1ZSkpXG4gICAgICB9KVxuXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBjcFNob3BMaXN0OiBjcFNob3BMaXN0XG4gICAgICB9KVxuICAgIH0sXG5cbiAgICBzaG93U2hvcExpc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIHNob3dTaG9wTGlzdFBvcDogJ3Nob3cnXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICBjaG9vc2VTaG9wOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGxldCBpbmRleCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pbmRleFxuICAgICAgbGV0IGN1cnJlbnRTaG9wID0gdGhpcy5kYXRhLnNob3BMaXN0W2luZGV4XVxuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgY3VycmVudFNob3A6IGN1cnJlbnRTaG9wLFxuICAgICAgICBzaG93U2hvcExpc3RQb3A6ICdoaWRlJyxcbiAgICAgIH0pXG5cbiAgICAgIHRoaXMuZ2V0QmVhdXRpY2lhbkFuZFByb2plY3QoY3VycmVudFNob3Auc2hvcF9pZClcbiAgICB9LFxuXG4gICAgY2hvb3NlQmVhdXRpY2lhbjogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBsZXQgYXBwID0gZ2V0QXBwKClcbiAgICAgIGxldCBfY3VycmVudEJlYXV0aWNpYW4gPSB0aGlzLmRhdGEuY3VycmVudEJlYXV0aWNpYW5cblxuICAgICAgbGV0IGluZGV4ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0LmluZGV4XG4gICAgICBsZXQgY3VycmVudEJlYXV0aWNpYW4gPSB0aGlzLmRhdGEuYmVhdXRpY2lhbkxpc3RbaW5kZXhdXG4gICAgICBpZiAoY3VycmVudEJlYXV0aWNpYW4uYmVhdXRpY2lhbl9pZCA9PT0gdGhpcy5kYXRhLmN1cnJlbnRCZWF1dGljaWFuLmJlYXV0aWNpYW5faWQpXG4gICAgICAgIHJldHVyblxuXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBjdXJyZW50QmVhdXRpY2lhbjogY3VycmVudEJlYXV0aWNpYW4sXG4gICAgICB9KVxuXG4gICAgIFxuICAgIH0sXG5cbiAgICBfdG9hc3QodGV4dCkge1xuICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgdGl0bGU6IHRleHQsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICBpY29uOiAnbm9uZSdcbiAgICAgIH0pXG4gICAgfSxcblxuICAgIGdldEJlYXV0aWNpYW5BbmRQcm9qZWN0OiBmdW5jdGlvbiAoc2hvcElkKSB7XG4gICAgICBsZXQgYXBwID0gZ2V0QXBwKClcbiAgICAgIGxldCBzZWxmID0gdGhpc1xuICAgICAgYXBwLmdldChgYXBwb2ludG1lbnQvZ2V0QmVhdXRpY2lhbkFuZFByb2plY3QvJHtzaG9wSWR9YCkudGhlbihkYXRhID0+IHtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSAoZGF0YS5kYXRhICYmIGRhdGEuZGF0YS5jb250ZW50KSB8fCB7fVxuICAgICAgICBsZXQgY3VycmVudEJlYXV0aWNpYW4gPSB7fVxuXG4gICAgICAgIGxldCBkZWZhdWx0QmVhdXRpY2lhbiA9IChjb250ZW50LmRlZmF1bHRCZWF1dGljaWFuIHx8IDApIC8gMVxuICAgICAgICBpZiAoZGVmYXVsdEJlYXV0aWNpYW4gPiAwKSB7XG4gICAgICAgICAgY3VycmVudEJlYXV0aWNpYW4gPSBjb250ZW50LmJlYXV0aWNpYW5zLmZpbHRlcihpdGVtID0+IGl0ZW0uYmVhdXRpY2lhbl9pZCA9PSBkZWZhdWx0QmVhdXRpY2lhbikucG9wKClcbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGYuc2V0RGF0YSh7XG4gICAgICAgICAgYmVhdXRpY2lhbkxpc3Q6IGNvbnRlbnQuYmVhdXRpY2lhbnMsXG4gICAgICAgICAgY3VycmVudEJlYXV0aWNpYW4sXG4gICAgICAgIH0pXG5cblxuICAgICAgfSkuY2F0Y2goZSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpXG4gICAgICB9KVxuXG4gICAgfSxcblxuXG4gICAgc2V0QmVhdXRpY2lvbigpIHtcbiAgICAgIGxldCBhcHAgPSBnZXRBcHAoKVxuXG4gICAgICBsZXQgYmVhdXRpY2lhbklkID0gdGhpcy5kYXRhLmN1cnJlbnRCZWF1dGljaWFuLmJlYXV0aWNpYW5faWRcblxuICAgICAgICAvLyDorr7nva7pu5jorqTnrqHlrrZcbiAgICAgICAgYXBwLnBvc3QoJ2NlbnRlci9zZXRCZWF1dGljaWFuLycgKyBiZWF1dGljaWFuSWQpLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coZGF0YSlcbiAgICAgICAgfSkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgd3gubWVzc2FnZSgn6K6+572u6buY6K6k566h5a625Ye66ZSZ77yM6K+36YeN6K+VLicpXG4gICAgICAgIH0pXG4gICAgfSxcblxuXG4gIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgbGV0IGFwcCA9IGdldEFwcCgpXG4gICAgICBsZXQgc2VsZiA9IHRoaXNcblxuICAgIFxuICAgICAgd3guZ2V0TG9jYXRpb24oe1xuICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGRhdGEpICE9PSAnW29iamVjdCBPYmplY3RdJylcbiAgICAgICAgICAgIGRhdGEgPSB7fVxuXG4gICAgICAgICAgYXBwLmdldCgnc2hvcC9nZXRMaXN0Jywge2xhdGl0dWRlOiBkYXRhLmxhdGl0dWRlIHx8ICcnLCBsb25naXR1ZGU6IGRhdGEubG9uZ2l0dWRlIHx8ICcnfSkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBkYXRhLmRhdGFcbiAgICAgICAgICAgIGxldCBjdXJyZW50U2hvcCA9IHJlc3VsdC5jb250ZW50WzBdIHx8IHt9XG4gICAgICAgICAgICBzZWxmLnNldERhdGEoe1xuICAgICAgICAgICAgICBzaG9wTGlzdDogcmVzdWx0LmNvbnRlbnQsXG4gICAgICAgICAgICAgIGNwU2hvcExpc3Q6IHJlc3VsdC5jb250ZW50LFxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgLy8g5Yik5patc2hvcF9pZOaYr+WQpuWtmOWcqFxuICAgICAgICAgICAgaWYoc2VsZi5kYXRhLmN1cnJlbnRTaG9wLnNob3BfaWQpIHtcbiAgICAgICAgICAgICAgY3VycmVudFNob3AgPSBzZWxmLmRhdGEuY3VycmVudFNob3BcbiAgICAgICAgICAgICAgc2VsZi5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBjdXJyZW50U2hvcFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VsZi5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBjdXJyZW50U2hvcFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBzZWxmLmdldFBldHMoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoY3VycmVudFNob3ApXG4gICAgICAgICAgICAgIHNlbGYuZ2V0QmVhdXRpY2lhbkFuZFByb2plY3QoY3VycmVudFNob3Auc2hvcF9pZClcbiAgICAgICAgICB9KS5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKVxuICAgICAgICB9LFxuICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgd3gub3BlblNldHRpbmcoe1xuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9KVxuICB9LFxuICBvblNob3coKSB7XG4gICAgdGhpcy5pbml0KClcbiAgfSxcbiAgfSJdfQ==