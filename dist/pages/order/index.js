'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page({
  data: {
    '__code__': {
      readme: ''
    },

    orderType: '',
    orderId: '',
    lastComponent: '',
    orderList: [],
    payType: '',
    beauticianCode: '', // 技师工号
    couponCode: '' // 优惠券
  },
  onLoad: function onLoad(options) {
    console.log(options);
  },
  onShow: function onShow() {
    this.getOrderList();
  },
  getOrderList: function getOrderList() {
    var _this = this;

    var app = getApp();
    app.get('center/order').then(function (data) {
      var result = data.data;
      result.content.forEach(function (item) {
        return item.appointment_end_time = _this._realDay(item.appointment_day, item.appointment_end_time);
      });
      _this.setData({
        orderList: result.content
      });
    });
  },
  payOffline: function payOffline() {
    var _this2 = this;

    var app = getApp();
    if (this.data.payType === 'cash') {
      if (this.data.beauticianCode.trim().length === 0) {
        wx.showToast({
          title: '技师工号不能为空',
          icon: 'none'
        });

        return;
      }
    }

    // 团购
    if (this.data.payType === 'group') {
      if (!this.data.couponCode.match(/^\d{6,}$/)) {
        wx.showToast({
          title: '券号输入错误',
          icon: 'none'
        });

        return;
      }
    }

    app.post('center/completeOrder/' + this.data.orderId, {
      type: this.data.payType,
      beautician_code: this.data.beauticianCode, coupon_code: this.data.couponCode
    }).then(function () {
      _this2.getOrderList();
      _this2.data.lastComponent.hide();
      _this2.setData({
        orderId: '',
        orderNo: '',
        lastComponent: '',
        payType: '',
        beauticianCode: '', // 技师工号
        couponCode: '' // 优惠券
      });
    }).catch(function (error) {
      wx.showToast({
        title: error.detail || '支付失败，请重试',
        duration: 2000,
        icon: 'none'
      });
    });
  },
  payOnline: function payOnline() {
    var app = getApp();
    app.get('order/pay/' + this.data.orderNo).then(function (data) {
      var result = data.data;
      var payParams = {
        'success': function success(res) {
          var _this3 = this;

          wx.showToast({
            title: '支付成功,等待数据确认，请稍等...',
            duration: 3000,
            icon: 'none'
          });

          setTimeout(function (x) {
            return _this3.getOrderList();
          }, 2000);
        },
        'fail': function fail(res) {
          wx.showToast({
            title: '支付失败, 请重试...',
            duration: 2000,
            icon: 'none'
          });
        }
      };

      Object.assign(payParams, result.content);

      wx.requestPayment(payParams);
    }).catch(function (error) {
      wx.showToast({
        title: error.detail || '支付失败，请重试',
        duration: 2000,
        icon: 'none'
      });
    });
  },
  cash: function cash(event) {
    var id = event.currentTarget.dataset.id;
    this.setData({
      payType: 'cash',
      orderId: id
    });
    var dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-cash');
    dialogComponent && dialogComponent.show();
  },
  handlerBeautician: function handlerBeautician(event) {
    var value = event.detail.value;
    this.setData({
      beauticianCode: value
    });
  },
  handlerCouponCode: function handlerCouponCode(event) {
    var value = event.detail.value;
    this.setData({
      couponCode: value
    });
  },
  scan: function scan(event) {
    var id = event.currentTarget.dataset.id;
    this.setData({
      payType: 'scan',
      orderId: id
    });
    var dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-scan');
    dialogComponent && dialogComponent.show();
  },
  groupBy: function groupBy(event) {
    var id = event.currentTarget.dataset.id;
    this.setData({
      payType: 'group',
      orderId: id
    });
    var dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-group');
    dialogComponent && dialogComponent.show();
  },
  online: function online(event) {
    var orderNo = event.currentTarget.dataset.id;
    this.setData({
      payType: 'online',
      orderNo: orderNo
    });
    var dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-online');
    dialogComponent && dialogComponent.show();
  },
  cancel: function cancel() {
    this.data.lastComponent.hide();
  },
  cancelOrder: function cancelOrder(event) {
    var _this4 = this;

    var app = getApp();
    var orderId = event.currentTarget.dataset.id;
    var index = event.currentTarget.dataset.index;
    app.get('center/cancelOrder/' + orderId).then(function () {
      var orderList = _this4.data.orderList;
      orderList[index].order_status = 2;
      _this4.setData({
        orderList: orderList
      });
    }).catch(function (error) {});
  },
  _realDay: function _realDay(value, day) {
    try {
      var _day = day + ' ' + value;
      _day = _day.replace(/-/g, '/');
      var date = new Date(_day).getTime() + 30 * 60 * 1000;
      var date = new Date(date);
      var minute = date.getMinutes();
      if (minute.toString().length == 1) minute += '0';
      return date.getHours() + ':' + minute + ':00';
    } catch (e) {
      return value;
    }
  }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,