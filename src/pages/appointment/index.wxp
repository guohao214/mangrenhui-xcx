<template>
  <wxc-popup class="J_Popup" animation-mode="left" align="right" status="{{showShopListPop}}">
    <view class="content popup__content" catchtap="return false">
      <view class="search-cell">
        <input placeholder="搜索店铺" class="search" bindinput="handlerSearch"/>
      </view>

      <scroll-view scroll-y class="search-shop-list" catchtap="return false">
        <view class="shop" wx:for="{{cpShopList}}"
              data-index="{{idx}}" wx:for-index="idx" wx:for-item="item" bindtap="chooseShop">
          <view class="shop-name">{{ item.shop_name}}</view>
          <view class="address">{{ item.address}}{{item._distance > 0 ? '(' + item.distance + ')' : ''}}</view>
        </view>

      </scroll-view>

    </view>
  </wxc-popup>

  <view class="cell cell-top15">
    <view class="header flex">
      <!--<view class="iconfont icon-location"></view>--><text class="label-title">选择店铺</text>
    </view>
    <wxc-flex class="shop-list">
      <view class="shop-pic flex">
        <wxc-avatar class="avatar" mold="circle"
                    src="{{currentShop.shop_logo}}">
        </wxc-avatar>
      </view>
      <view class="shop flex flex-column align-start" bindtap="showShopList">
        <text class="shop-name">{{currentShop.shop_name}}</text>
        <text class="shop-address">{{currentShop.address}}</text>
      </view>
      <view class="shop-choose flex">
        <wxc-icon size="30" type="arrow-right" bindtap="showShopList"></wxc-icon>
      </view>
    </wxc-flex>
  </view>

  <view class="cell">
    <view class="header flex">
      <!--<view class="iconfont icon-footmark"></view>--><text class="label-title">选择猫咪</text>
    </view>
    <scroll-view class="beautician-list" scroll-x>
      <view
        wx:if="{{pets.length > 0}}"
        class="beautician {{ item.pet_id === currentPet.pet_id ? 'active' : ''}}"
        wx:for="{{pets}}" data-index="{{idx}}"
        wx:for-index="idx" wx:for-item="item" bindtap="choosePet">
        <wxc-avatar class="avatar" mold="circle"
                    src="{{item.pet_pic}}">
        </wxc-avatar>
        <wxc-icon size="24" type="right" class="icon" color="#fff"></wxc-icon>
        <wxc-elip line="1" class="beauticianName">{{item.pet_name}}</wxc-elip>
      </view>

      <view bindtap="addPet" wx:if="{{pets.length == 0}}" class="add-pet-view">
        <text class="add-pet">添加猫咪</text>
      </view>
    </scroll-view>
  </view>


  <view class="cell">
    <view class="header flex">
      <!--<view class="iconfont icon-discover"></view>-->
      <text class="label-title">{{project_more}}</text>
    </view>
    <scroll-view class="project-list" scroll-x>
      <view class="project {{ item.active === true ? 'active' : ''}}"
            data-index="{{idx}}" wx:for="{{projectListFilter}}"
            wx:for-index="idx" wx:for-item="item" bindtap="chooseProject">
        <wxc-avatar class="avatar" mold="circle"
                    src="{{item.project_cover}}">
        </wxc-avatar>
         <wxc-icon size="24" type="right" class="icon" color="#fff"></wxc-icon>
        <wxc-elip line="1" class="projectName">{{item.project_name}}</wxc-elip>

      </view>

      <view  wx:if="{{projectListFilter.length == 0}}" class="add-pet-view">
        <text class="add-pet">请先选择猫咪</text>
      </view>
    </scroll-view>
  </view>


  <view class="cell">
    <view class="header flex">
      <!--<view class="iconfont icon-footmark"></view>--><text class="label-title">选择管家</text>
    </view>
    <scroll-view class="beautician-list" scroll-x>
      <view
        class="beautician guanjia {{ item.beautician_id === currentBeautician.beautician_id ? 'active' : ''}}"
        wx:for="{{beauticianList}}" data-index="{{idx}}"
        wx:for-index="idx" wx:for-item="item" bindtap="chooseBeautician">
        <wxc-avatar class="avatar" mold="circle"
                    src="{{item.avatar}}">
        </wxc-avatar>
        <wxc-icon size="24" type="right" class="icon" color="#fff"></wxc-icon>
        <wxc-elip line="1" class="beauticianName">{{item.name}}</wxc-elip>
      </view>
    </scroll-view>
  </view>


  <view class="cell">
    <view class="header flex">
      <!--<view class="iconfont icon-clock"></view>--><text class="label-title">预约时间</text>
    </view>
    <scroll-view class="day-list" scroll-x>
      <view class="day {{ item.date === currentAppointmentDay.date ? 'active' : ''}}"
            wx:for="{{appointmentDayList}}" data-index="{{idx}}"
            wx:for-index="idx" wx:for-item="item" bindtap="chooseDay">
        <view class="date">{{ item.date }}</view>
        <view class="week">{{ item.week }}</view>
      </view>
    </scroll-view>
    <view class="time-list">
      <view class="time {{!item.valid ? 'invalid': '' }} {{ item.checked ? 'active' : ''}}"
            wx:for="{{appointmentTimeList}}" data-index="{{idx}}"
            wx:for-index="idx" wx:for-item="item" bindtap="chooseTime"> {{ item.time }}
      </view>
    </view>
  </view>

  <view class="cell address-list">
    <view class="header flex">
      <text class="label-title">是否接送(来回接送费用为{{receiveFee}}元)</text>
    </view>

    <!--<view class="is-receive-sw">
      <switch checked="{{isReceive}}" bindchange="getAddressList">是否接送</switch>
    </view>-->

    <view class="address">
      <radio-group bindchange="setReceiveAddress">
        <radio value="{{item.my_address_id}}" checked="{{item.checked}}"  wx:for="{{addressList}}" data-index="{{idx}}"
            wx:for-index="idx" wx:for-item="item" bindtap="selectAddress">
          <view>
            {{item.uname}} / {{item.phone}}
          </view>
          <view>
            {{item.address_prefix}} / {{item.address}}
          </view>
            
        </radio>
          
      </radio-group>

      <view bindtap="addAddress" wx:if="{{addressList.length == 0}}" class="add-pet-view add-address-view">
        <text class="add-pet">添加地址</text>
      </view>
        
    </view>
        
  </view>

  <view class="footer">
    <button type="primary"
      bindtap="appointment"
      class="primary-btn"
      formType="submit">发送预约</button>
  </view>


  <wxc-toast
    is-show="{{toastShow}}"
    text="{{toastMsg}}"></wxc-toast>
</template>

<script>
  const $projectMore = '选择项目'
  export default {
    config: {
      navigationBarTitleText: '预约',
      navigationBarBackgroundColor: '#E8E8E8',
      navigationBarTextStyle: 'black',
      usingComponents: {
        'wxc-flex': '@minui/wxc-flex',
        'wxc-icon': '@minui/wxc-icon',
        'wxc-avatar': '@minui/wxc-avatar',
        'wxc-mask': '@minui/wxc-mask',
        'wxc-popup': '@minui/wxc-popup',
        'wxc-elip': '@minui/wxc-elip',
        'wxc-toast': '@minui/wxc-toast',
      }
    },
    data: {
      currentPet:{},
      pets: [],
      project_more: $projectMore,
      toastText: '',
      showToast: false,
      shopList: [],
      cpShopList: [],
      showShopListPop: 'hide',
      currentShop: {},
      beauticianList: [],
      currentBeautician: {},
      projectList: [],
      projectListFilter: [],
      currentProject: {},
      chooseProjects: [], // 已经选择的项目
      appointmentDayList: [],
      currentAppointmentDay: '',
      appointmentTimeList: [],
      currentAppointmentTimes: [], // 预约的时间
      defaultBeautician: 0, // 默认管家
      toastMsg: '',
      toastShow: false,
      addressList: [],
      isReceive: false,
      receiveFee: 20,
      lastAddressId: '',
    },

    setReceiveAddress(e) {
      console.log(e)
    },

    selectAddress(e) {
      const index = e.currentTarget.dataset.index / 1

      const addressList =  this.data.addressList
      const address = this.data.addressList[index]

      if (address.checked)
        address.checked = false
      else
        address.checked = true

      if(this.data.lastAddressId !== '') {
        const lastAddress = this.data.addressList[this.data.lastAddressId]
        lastAddress.checked = false
      }


      this.setData({
        lastAddressId: index,
        addressList
      }
      )
    },

    getAddressList(e) {
    //  const value = e.detail.value
    //  if (value === false)
    //   return

    //   this.setData({
    //     isReceive: value
    //   })

      let app = getApp()
      if (!app.getSessionId())
        return

      app.get('center/addressList').then(data => {
        const addressList = data.data.content || []
        addressList.forEach(item => item.checked = false)
        this.setData({
          addressList
        })
      })
    },

    onShareAppMessage() {
      return {
        title: 'CAT猫的世界',
        path: '/pages/article/index',
        imageUrl: 'https://api.mdshijie.com/static/share.png'
      }
    },


    handlerSearch: function (event) {
      let value = event.detail.value
      let shopList = this.data.shopList
      let cpShopList = shopList.filter(function (item) {
        return item.shop_name.match(new RegExp(value))
      })

      this.setData({
        cpShopList: cpShopList
      })
    },

    showShopList: function () {
      this.setData({
        showShopListPop: 'show'
      })
    },

    chooseShop: function (event) {
      let index = event.currentTarget.dataset.index
      let currentShop = this.data.shopList[index]
      this.setData({
        currentShop: currentShop,
        showShopListPop: 'hide',
      })

      this.getBeauticianAndProject(currentShop.shop_id)
    },

    // 选择项目
    chooseProject: function (event) {
      let index = event.currentTarget.dataset.index
      let currentProject = this.data.projectListFilter[index]

      // 判断是否已经选择了项目
      const chooseProjects = this.data.chooseProjects
      const findIndex = chooseProjects.findIndex(item => item === currentProject)
      
      console.log(findIndex)

      if (findIndex >= 0) {
        currentProject.active = false
        chooseProjects.splice(findIndex, 1)
      } else {
        currentProject.active = true
        chooseProjects.push(currentProject)
      }

      // const projectList = this.data.projectList
      // projectList[index] = currentProject

      this.setData({
        currentProject: currentProject,
        [`projectListFilter[${index}]`]: currentProject,
        chooseProjects
      }, () => console.log(this.data.chooseProjects))


      // 预约时间
      this.clearAppointmentTime()
    },
    
    clearAppointmentTime() {
      let timeList = this.data.appointmentTimeList
      timeList.forEach(item => item.checked = false)
      this.setData({
        currentAppointmentTimes: [],
        appointmentTimeList: timeList
      })
    },

    filterProject() {
      const currentPet = this.data.currentPet
      const hair = currentPet.hair

      this.data.projectList.forEach(item => item.active = false)

      const project = this.data.projectList.filter(item => item.project_property === hair)

      if (project.length) {
        let currentProject = project[0]
        currentProject.active = true
         this.setData({
            currentProject,
            chooseProjects: [currentProject],
         })
      } else {
        this.setData({
          chooseProjects: []
        })
      }

      this.setData({
        projectListFilter: project
      })
    },

    choosePet: function (event) {
      let index = event.currentTarget.dataset.index
      let currentPet = this.data.pets[index]
      if (currentPet.pet_id === this.data.currentPet.pet_id)
        return

      // 筛选项目 projectListFilter
      this.setData({
        currentPet,
        chooseProjects: [],
      }, () => this.filterProject())

      this.clearAppointmentTime()
    },

    setToast(msg) {
      this.setData({
          toastMsg: msg,
          toastShow: true,
        }, () => setTimeout(() => {
          this.setData({
          toastMsg: '',
          toastShow: false,
          })
        }, 2000))
    },

    chooseBeautician: function (event) {
      let index = event.currentTarget.dataset.index
      let currentBeautician = this.data.beauticianList[index]
      if (currentBeautician.beautician_id === this.data.currentBeautician.beautician_id)
        return

      this.setData({
        currentBeautician: currentBeautician,
      })

      let showLoading = true
      let beauticianId = currentBeautician.beautician_id
      if (this.data.defaultBeautician > 0 && beauticianId != this.data.defaultBeautician) {
        this.setToast('我可以提供服务，但我不是您的专属管家')
        showLoading = false
      }

      let day = this.data.currentAppointmentDay.day
      this.getAppointmentTimes(beauticianId, day, showLoading)
    },


    chooseDay: function (event) {
      let index = event.currentTarget.dataset.index
      let currentAppointmentDay = this.data.appointmentDayList[index]

      if (currentAppointmentDay.day === this.data.currentAppointmentDay.day)
        return

      this.setData({
        currentAppointmentDay: currentAppointmentDay,
      })

      let beauticianId = this.data.currentBeautician.beautician_id
      let day = currentAppointmentDay.day
      this.getAppointmentTimes(beauticianId, day)
    },

    _toast(text) {
      wx.showToast({
        title: text,
        duration: 2000,
        icon: 'none'
      })
    },

    chooseTime: function (event) {
      let everyTime = 30
      let index = event.currentTarget.dataset.index
      let time = this.data.appointmentTimeList[index]
      if (!time.valid)
        return false

      let timeList = this.data.appointmentTimeList
      timeList.forEach(item => item.checked = false)

      const chooseProjects = this.data.chooseProjects
      if (!chooseProjects.length)
        return this._toast('请选择预约项目')

      const projectUseTime = chooseProjects.reduce((init, item) => item.use_time / 1 + init, 0)

      let useTimeNum = Math.ceil(projectUseTime / everyTime)
      let timeListLength = this.data.appointmentTimeList.length
      if (index + useTimeNum > timeListLength) {
        this.setData({
          currentAppointmentTimes: [],
          appointmentTimeList: timeList,
        })

        this._toast('预约时间不足,请重新选择.')

        return
      }
      let start = 0
      let useTime = []
      while (start < useTimeNum) {
        let item = timeList[index + start++]
        if(!item.valid) {
          timeList.forEach(item => item.checked = false)
          useTime = []
          this.setData({
            currentAppointmentTimes: useTime,
            appointmentTimeList: timeList,
          })
          this._toast('预约时间不足')
          break;
        }
        item.checked = true
        useTime.push(item.time)
      }

      this.setData({
        currentAppointmentTimes: useTime,
        appointmentTimeList: timeList
      })

    },

    getBeauticianAndProject: function (shopId) {
      let app = getApp()
      let self = this
      app.get(`appointment/getBeauticianAndProject/${shopId}`).then(data => {
        let content = (data.data && data.data.content) || {}

        const receiveFee = content.receiveFee

        content.days = content.days.map(item => {
          let day = item.split('#')
          return {
            date: day[0],
            week: day[1],
            day: day[2]
          }
        })

        content.projects = content.projects || []
        content.projects.forEach(item => item.active = false)

        // 默认选择的项目
        let currentProject = content.projects[0] || {}
        currentProject.active = true

        let currentBeautician = content.beauticians[0] || {}
        
        let defaultBeautician = (content.defaultBeautician || 0) / 1
        if (defaultBeautician > 0) {
          currentBeautician = content.beauticians.filter(item => item.beautician_id == defaultBeautician).pop()
        }

        let currentAppointmentDay = content.days[0] || {}

        self.setData({
          beauticianList: content.beauticians,
          projectList: content.projects,
          project_more: $projectMore,
          appointmentDayList: content.days,
          currentProject,
          chooseProjects: [currentProject],
          currentBeautician,
          currentAppointmentDay,
          defaultBeautician,
          receiveFee: receiveFee.fee / 1
        })

        self.getPets()

        self.getAppointmentTimes(currentBeautician.beautician_id, currentAppointmentDay.day)
      }).catch(e => {
        console.log(e)
      })

    },

    getPets() {
      let app = getApp()
      let self = this

      app.get('myPet/findMyPets').then(data => {
        let currentPet = data.data.content[0]
        if (!currentPet)
          currentPet = {}

        self.setData({
          pets: data.data.content,
          currentPet,
        }, () => this.filterProject())
      })

    },

    getAppointmentTimes: function (beauticianId, day, showLoading = true) {
      let app = getApp()
      let self = this
      this.setData({
        currentAppointmentTimes: []
      })

      return app.get('appointment/getAppointmentTime/' + beauticianId + '/' + day, '', showLoading)
        .then((data) => {
          let content = (data.data && data.data.content) || []
          // for (var i in [0, 0, 0, 0])
          //   content.push({})

          self.setData({
            appointmentTimeList: content
          })
        })
    },

    // 发送预约
    appointment: function (event) {
      let app = getApp()
      let formId = event.detail.formId
      const chooseProjects = this.data.chooseProjects
      if (!chooseProjects.length)
        return this._toast('请选择预约项目')

      if (!this.data.currentAppointmentTimes.length)
        return this._toast('请选择预约时间')
      
      // 预约项目
      let projectIds = chooseProjects.map(item => item.project_id)
      projectIds = projectIds.join(',')

      // 预约
      let data = {
        shop_id: this.data.currentShop.shop_id,
        pet_id: this.data.currentPet.pet_id,
        beautician_id: this.data.currentBeautician.beautician_id,
        project_id: projectIds,
        appointment_day: this.data.currentAppointmentDay.day,
        appointment_time: this.data.currentAppointmentTimes.join(','),
        from: 'xcx',
        formId: formId,
        address: ((this.data.addressList.filter(item => item.checked).pop() || {}).my_address_id || 0)
      }

      app.post('cart/appointment', data)
        .then(() =>   {
          this._toast('预约成功!')

          this.getAppointmentTimes(data.beautician_id, data.appointment_day)
          
          setTimeout(x =>  {
            wx.switchTab({
                url: '/pages/pay/index'
              })
            
            }, 1000)

          // 通知
          // app.askNotice()
        })
        .catch(error => {
          this._toast(error.detail || '预约失败!')
        })
    },

    addPet() {
      wx.navigateTo({
        url: '/pages/pet/index'
      })
    },

    addAddress() {
      wx.navigateTo({
        url: '/pages/address/index'
      })   
    },

    init: function() {
      let app = getApp()
      let self = this

    
      wx.getLocation({
        complete: function (data) {
          if (Object.prototype.toString.call(data) !== '[object Object]')
            data = {}

          app.get('shop/getList', {latitude: data.latitude || '', longitude: data.longitude || ''}).then(data => {
            let result = data.data
            let currentShop = result.content[0] || {}
            self.setData({
              shopList: result.content,
              cpShopList: result.content,
            })

            // 判断shop_id是否存在
            if(self.data.currentShop.shop_id) {
              currentShop = self.data.currentShop
              self.setData({
                currentShop
              })
            } else {
              self.setData({
                currentShop
              })
            }

            // self.getPets()
            
            if (currentShop)
              self.getBeauticianAndProject(currentShop.shop_id)
          }).catch(e => console.log(e))
        },
        fail: function () {
          wx.openSetting({
            success: function (res) {
            },
            fail: function () {
            }
          })
        }
      })
  },
  onLoad() {
    this.init()
  },

  onShow: function () {
    if (!this.data.pets.length)
      this.getPets()

    // if (!this.data.addressList.length)
    this.getAddressList()
      
    const data = this.data
    // 加载
    if (data.currentBeautician.beautician_id && data.currentAppointmentDay.day) {
      this.getAppointmentTimes(data.currentBeautician.beautician_id, data.currentAppointmentDay.day)
    }
    
  },

  onTabItemTap: function() {
    this.init()
  }
  }
</script>

<style>
  @import "font.wxss";
  @import "style.wxss";
  @import "mask.wxss";
  @import "shop.wxss";
  @import "project.wxss";
  @import "beautician.wxss";
  @import "time.wxss";


</style>
