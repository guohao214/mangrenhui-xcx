<template>
  <wxc-dialog class="wxc-dialog wxc-cancel-order"
              title="确定取消此订单"
              cancel-text="取消"
              bindconfirm="cancelOrderConfirm"
              bindcancel="cancel"
              confirm-text="确定">
  </wxc-dialog>


  <wxc-dialog class="wxc-dialog wxc-cash"
              title="店内现金"
              content="输入管家工号"
              cancel-text="取消"
              bindconfirm="payOffline"
              bindcancel="cancel"
              confirm-text="确定">
    <input class="input" placeholder="管家工号" bindinput="handlerBeautician"/>
  </wxc-dialog>

  <wxc-dialog class="wxc-dialog wxc-scan" title="店里扫码"
              content="请确认您已经店里扫码完成买单"
              cancel-text="取消"
              bindconfirm="payOffline"
              bindcancel="cancel"
              confirm-text="确定"></wxc-dialog>

  <wxc-dialog class="wxc-dialog wxc-group" title="团购"
              content="请输入点评、美团或者口碑券号"
              cancel-text="取消"
              bindconfirm="payOffline"
              bindcancel="cancel"
              confirm-text="确定">
    <input class="input" placeholder="请输入券号" bindinput="handlerCouponCode"/>
  </wxc-dialog>

  <wxc-dialog class="wxc-dialog wxc-online" title="线上支付"
              content="支付金额 ¥ {{ amount }}"
              cancel-text="取消"
              bindcancel="cancel"
              bindconfirm="payOnline"
              confirm-text="确定"></wxc-dialog>

  <view wx:if="{{ orderList.length === 0}}">
    <wxc-abnor type="ORDER"></wxc-abnor>
  </view>

  <view class="order-list" wx:for="{{orderList}}" data-index="{{idx}}"
        wx:for-index="idx" wx:for-item="order">
    <view class="cell amount">
      <view class="label">订单号</view>
      <view>{{ order.order_no}}</view>
    </view>
    <view class="cell amount">
      <view class="label">付款金额</view>
      <view>¥{{ order.total_fee}}</view>
    </view>

    <view class="cell amount" wx:if="{{order.is_receive}}">
    <view class="label">接送地址</view>
    <view>{{ order.is_receive ? order.receive_address_user + '，' + order.receive_address_address : ''}}</view>
  </view>
  
    <view class="project">
      <view class="cell">
        <view class="label">门店</view>
        <view>{{ order.shop_name}}</view>
      </view>
      
      <view class="cell">
        <view class="label">猫咪</view>
       <wxc-elip line="1">{{order.pet_name}}</wxc-elip>
      </view>

      <view class="cell">
        <view class="label">项目</view>
       <wxc-elip line="2" class="project_name">{{order.project_names}}</wxc-elip>
      </view>
      <view class="cell">
        <view class="label">管家</view>
        <view>{{ order.beautician_name}}</view>
      </view>
      <view class="cell">
        <view class="label">预约日期</view>
        <view>{{order.appointment_day}}
          {{order.appointment_start_time}}~{{order.appointment_end_time}}
        </view>
      </view>
    </view>
    <view class="control">
      <view class="handled" wx:if="{{ order.order_status == 1 }}">
        <form bindsubmit="cancelOrder" report-submit="{{ true }}">
          <view class="cancel-order" wx:if="{{order.order_status  == 1}}">
            <button size="default"
                    type="warn"
                    formType="submit"
                    data-id="{{order.order_id}}"
                    data-index="{{idx}}"
                    class="btn">取消订单
            </button>
          </view>
        </form>
      </view>
      <view class="handled" wx:elif="{{ order.order_status == 100 }}">订单已完成</view>
      <view class="handled" wx:else>订单已取消</view>
    </view>

  </view>

</template>

<script>
  export default {
    config: {
      navigationBarTitleText: '我的订单',
      navigationBarBackgroundColor: '#E8E8E8',
      navigationBarTextStyle: 'black',
      usingComponents: {
        'wxc-dialog': '@minui/wxc-dialog',
        'wxc-abnor': '@minui/wxc-abnor',
        'wxc-elip': '@minui/wxc-elip',
      }
    },
    data: {
      amount: 0,
      orderType: '',
      orderId: '',
      lastComponent: '',
      orderList: [],
      payType: '',
      beauticianCode: '',  // 管家工号
      couponCode: ''       // 优惠券
    },
    onLoad: function (options) {
      // console.log(options)
    },
    onShow: function () {
      this.getOrderList()
    },
    getOrderList: function () {
      let app = getApp()
      app.get('center/order').then(data => {
        let result = data.data
        result.content.forEach(item => item.appointment_end_time = this._realDay(item.appointment_day, item.appointment_end_time))
        this.setData({
          orderList: result.content
        })
      })
    },
    payOffline: function () {
      let app = getApp()
      if (this.data.payType === 'cash') {
        if (this.data.beauticianCode.trim().length === 0) {
          wx.showToast({
            title: '管家工号不能为空',
            icon: 'none'
          })

          return
        }
      }

      // 团购
      if (this.data.payType === 'group') {
        if (!this.data.couponCode.match(/^\d{6,}$/)) {
          wx.showToast({
            title: '券号输入错误',
            icon: 'none'
          })

          return
        }
      }


      app.post(`center/completeOrder/${this.data.orderId}`, {
        type: this.data.payType,
        beautician_code: this.data.beauticianCode, coupon_code: this.data.couponCode
      }).then(() => {
        this.getOrderList()
        this.data.lastComponent.hide()
        this.setData({
          orderId: '',
          orderNo: '',
          lastComponent: '',
          payType: '',
          beauticianCode: '',  // 管家工号
          couponCode: ''       // 优惠券
        })
      })
        .catch(error => {
          wx.showToast({
            title: error.detail || '支付失败，请重试',
            duration: 2000,
            icon: 'none'
          })
        })
    },
    payOnline: function () {
      let app = getApp()
      app.get(`order/pay/${this.data.orderNo}`)
        .then(data => {
          let result = data.data
          let payParams = {
            'success': function (res) {

              wx.showToast({
                title: '支付成功,等待数据确认，请稍等...',
                duration: 3000,
                icon: 'none'
              })

              setTimeout(x => this.getOrderList(), 2000)
            },
            'fail': function (res) {
              wx.showToast({
                title: '支付失败, 请重试...',
                duration: 2000,
                icon: 'none'
              })
            }
          }

          Object.assign(payParams, result.content)

          wx.requestPayment(payParams)
        })
        .catch(error => {
          wx.showToast({
            title: error.detail || '支付失败，请重试',
            duration: 2000,
            icon: 'none'
          })
        })
    },
    cash: function (event) {
      let id = event.currentTarget.dataset.id
      this.setData({
        payType: 'cash',
        orderId: id,
      })
      let dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-cash')
      dialogComponent && dialogComponent.show();
    },
    handlerBeautician: function (event) {
      let value = event.detail.value
      this.setData({
        beauticianCode: value
      })
    },
    handlerCouponCode: function (event) {
      let value = event.detail.value
      this.setData({
        couponCode: value
      })
    },
    scan: function (event) {
      let id = event.currentTarget.dataset.id
      this.setData({
        payType: 'scan',
        orderId: id
      })
      let dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-scan')
      dialogComponent && dialogComponent.show();
    },
    groupBy: function (event) {
      let id = event.currentTarget.dataset.id
      this.setData({
        payType: 'group',
        orderId: id
      })
      let dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-group')
      dialogComponent && dialogComponent.show();
    },
    online: function (event) {
      let orderNo = event.currentTarget.dataset.id
      let amount = event.currentTarget.dataset.amount
      this.setData({
        payType: 'online',
        orderNo: orderNo,
        amount: amount,
      })
      let dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-online')
      dialogComponent && dialogComponent.show();
    },
    cancel: function () {
      this.data.lastComponent.hide();
    },
    cancelOrderConfirm: function () {
      let app = getApp()
      let formId = this.data.formId
      let orderId = this.data.orderId
      let index = this.data.lastIndex

      app.get('center/cancelOrder/' + orderId, { formId: formId})
        .then(data => {
          this.data.lastComponent.hide()
          let orderList = this.data.orderList
          orderList[index].order_status = 2
          this.setData({
            orderList: orderList,
            orderId: '',
            orderNo: '',
            lastComponent: '',
            payType: '',
            beauticianCode: '',  // 管家工号
            couponCode: '' ,      // 优惠券,
            formId: ''
          })
        })
        .catch(error => {
          wx.showToast({
            title: error.detail || '订单取消失败',
            icon: 'none'
          })
        })
    },
    cancelOrder: function (event) {

      let dialogComponent = this.data.lastComponent = this.selectComponent('.wxc-cancel-order')
      dialogComponent && dialogComponent.show();

      let formId = event.detail.formId
      let orderId = event.detail.target.dataset.id
      let index = event.detail.target.dataset.index
      this.setData({
        formId: formId,
        orderId: orderId,
        lastIndex: index
      })
    },

    cancelOrder_1: function (event) {
      let app = getApp()
      let formId = event.detail.formId
      let orderId = event.detail.target.dataset.id
      let index = event.detail.target.dataset.index

      //console.log(event)

      app.get('center/cancelOrder/' + orderId, { formId: formId})
        .then(data => {
          let orderList = this.data.orderList
          orderList[index].order_status = 2
          this.setData({
            orderList: orderList
          })
        })
        .catch(error => {
          wx.showToast({
            title: error.detail
          })
        })
    },
    _realDay: function (day, value) {
      try {
        var _day = day + ' ' + value
        _day = _day.replace(/-/g, '/')
        let date = (new Date(_day)).getTime() + 30 * 60 * 1000
        date = (new Date(date))
        let minute = date.getMinutes()
        if (minute.toString().length == 1)
          minute += '0'

        // console.log(value)
        // console.log(day)
        return date.getHours() + ':' + minute + ':00'
      } catch (e) {
        return value
      }
    }

  }
</script>

<style>
  @import "style.wxss";
</style>
